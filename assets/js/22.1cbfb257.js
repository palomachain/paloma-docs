(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{286:function(a,s,t){"use strict";t.r(s);var e=t(13),n=Object(e.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"message-with-pigeon"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#message-with-pigeon"}},[a._v("#")]),a._v(" Message with Pigeon")]),a._v(" "),s("p",[a._v("Pigeon is a Golang cross-chain message relayer system for Paloma\nvalidators to deliver messages to any blockchain. Pigeon is actively\nmaintained by the Volume Finance team.")]),a._v(" "),s("h2",{attrs:{id:"installation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[a._v("#")]),a._v(" Installation")]),a._v(" "),s("p",[a._v("Start by installing the alpha release on your\nvalidator environment:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" -O - https://github.com/palomachain/pigeon/releases/download/v0.2.5-alpha/pigeon_0.2.5-alpha_Linux_x86_64v3.tar.gz "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("tar")]),a._v(" -C /usr/local/bin -xvzf - pigeon\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chmod")]),a._v(" +x /usr/local/bin/pigeon\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" ~/.pigeon\n")])])]),s("h3",{attrs:{id:"set-your-keys"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-your-keys"}},[a._v("#")]),a._v(" Set your keys")]),a._v(" "),s("p",[a._v("Next, set up your EVM keys:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("pigeon evm keys generate-new ~/.pigeon/keys/evm/eth-main\n")])])]),s("p",[a._v("Or, you may import existing EVM private keys:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("pigeon evm keys "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("import")]),a._v(" ~/.pigeon/keys/evm/eth-main\n")])])]),s("p",[a._v("Ensure that your keys are stored safe and securly.")]),a._v(" "),s("h2",{attrs:{id:"configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration"}},[a._v("#")]),a._v(" Configuration")]),a._v(" "),s("p",[a._v("Ensure your Paloma Cosmos-SDK keys are stored and available on\nyour environment with:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("palomad keys "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$VALIDATOR")]),a._v('"')]),a._v(" --recover\n")])])]),s("p",[a._v("Set the VALIDATOR env variable:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("VALIDATOR")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("palomad keys list --list-names "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("head")]),a._v(" -n1"),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('"')]),a._v("\n")])])]),s("p",[a._v("In the pigeon directory, create your validator's configuration file\n"),s("code",[a._v("~/.pigeon/config.yaml")]),a._v(".")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("loop-timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 5s\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("paloma")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("chain-id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" paloma"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("testnet"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("6")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("call-timeout")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 20s\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("keyring-dir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ~/.paloma\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("keyring-pass-env-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" PALOMA_KEYRING_PASS\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("keyring-type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" test\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("signing-key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("VALIDATOR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("base-rpc-url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("26657")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("gas-adjustment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.5")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("gas-prices")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" 0.001ugrain\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("account-prefix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" paloma\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("evm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("eth-main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("chain-id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("base-rpc-url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("ETH_RPC_URL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("keyring-pass-env-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ETH_PASSWORD\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("signing-key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("ETH_SIGNING_KEY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("keyring-dir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" ~/.pigeon/keys/evm/eth"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("main\n")])])]),s("h2",{attrs:{id:"start-messaging"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#start-messaging"}},[a._v("#")]),a._v(" Start messaging")]),a._v(" "),s("p",[a._v("Once the setup of Pigeon is successful, you can\nstart sending messages. Before that, Pigeon must know\nthe actor relaying message across the network by defining\nits keys:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOT"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("~/.pigeon/env.sh")]),a._v("\nPALOMA_KEYRING_PASS=<your Paloma key password>\nETH_RPC_URL=<Your Ethereum mainnet RPC URL>\nETH_PASSWORD=<Your ETH Key Password>\nETH_SIGNING_KEY=<Your ETH SIGNING KEY>\nVALIDATOR=<VALIDATOR NAME>\nEOT")]),a._v("\n")])])]),s("p",[a._v("Then, run Pigeon with:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" ~/.pigeon/env.sh\npigeon start\n")])])]),s("p",[a._v("Pigeon will run in the background.")]),a._v(" "),s("h3",{attrs:{id:"using-systemd-to-run-pigeon"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-systemd-to-run-pigeon"}},[a._v("#")]),a._v(" Using systemd to run Pigeon")]),a._v(" "),s("p",[a._v("You can run Pigeon as a systemd process on your node\nso that it will automatically restart on server reboots or crashes.\nValidators are responsbile for actively maintaining relayed messages\nand verifying the state of the chain.")]),a._v(" "),s("p",[a._v("Create a new unit file with:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" ~/.pigeon/env.sh\n")])])]),s("p",[a._v("Populate "),s("code",[a._v("env.sh")]),a._v(" with:")]),a._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOT"),s("span",{pre:!0,attrs:{class:"token bash punctuation"}},[a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("/etc/systemd/system/pigeond.service")]),a._v("\n[Unit]\nDescription=Pigeon daemon\nAfter=network-online.target\nConditionPathExists=/usr/local/bin/pigeon\n\n[Service]\nType=simple\nRestart=always\nRestartSec=5\nUser="),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("USER")]),a._v("}")]),a._v("\nWorkingDirectory=~\nEnvironmentFile="),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("HOME")]),a._v("}")]),a._v("/.pigeon/env.sh\nExecStart=/usr/local/bin/pigeon start\nExecReload=\n\n[Install]\nWantedBy=multi-user.target\nEOT")]),a._v("\n")])])]),s("p",[a._v("Start Pigeon:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" pigeond start\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Check that it's running successfully:")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" pigeond status\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Or watch the logs:")]),a._v("\njournalctl -u pigeond.service -f -n "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);
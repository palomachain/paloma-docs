(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{279:function(a,t,e){"use strict";e.r(t);var n=e(13),s=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"build-paloma"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build-paloma"}},[a._v("#")]),a._v(" Build Paloma")]),a._v(" "),t("p",[a._v("Paloma is the official Golang reference implementation of the Paloma\nnode software. Use this guide to install Paloma and "),t("code",[a._v("Palomad")]),a._v(", the\ncommand-line interface and daemon that connects to Paloma and enables\nyou to interact with the Paloma blockchain.")]),a._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[a._v("Recommended operating systems")]),a._v(" "),t("p",[a._v("This guide has been tested against Linux distributions only.\nTo ensure a successful production environment setup, consider\nusing a Linux system.")])]),a._v(" "),t("p",[a._v("Running a full Paloma node is a resource-intensive process that\nrequires a persistent server. If you want to use Paloma without\ndownloading the entire blockchain, use\n"),t("a",{attrs:{href:"https://station.Paloma.money/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Paloma Station"),t("OutboundLink")],1),a._v(".")]),a._v(" "),t("h2",{attrs:{id:"get-the-paloma-source-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-the-paloma-source-code"}},[a._v("#")]),a._v(" Get the Paloma source code")]),a._v(" "),t("ol",[t("li",[a._v("Use "),t("code",[a._v("git")]),a._v(" to retrieve "),t("a",{attrs:{href:"https://github.com/Paloma-money/core/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Paloma"),t("OutboundLink")],1),a._v(",\nand check out the "),t("code",[a._v("main")]),a._v(" branch, which contains the latest stable release.")])]),a._v(" "),t("p",[a._v("You can find out the latest tag on the "),t("a",{attrs:{href:"https://github.com/Paloma-money/core/tags",target:"_blank",rel:"noopener noreferrer"}},[a._v("tags page"),t("OutboundLink")],1),a._v("\nor via autocomplete in your terminal: type "),t("code",[a._v("git checkout v")]),a._v(" and press "),t("code",[a._v("<TAB>")]),a._v(".")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("```bash\ngit clone https://github.com/Paloma-money/core\ncd core\ngit checkout [latest version]\n```\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[a._v("Build Paloma. This will install the "),t("code",[a._v("Palomad")]),a._v(" executable to\nyour "),t("a",{attrs:{href:"https://go.dev/doc/gopath_code",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("GOPATH")]),a._v(" "),t("OutboundLink")],1),a._v(" environment variable.")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Verify that Paloma is installed correctly.")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("Palomad version --long\n")])])]),t("p",[t("strong",[a._v("Example")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("name: Paloma\nserver_name: Palomad\nversion: v2.0.0\ncommit: ea682c41e7e71ba0b182c9e7f989855fb9595885\nbuild_tags: netgo,ledger\ngo: go version go1.18.2 darwin/amd64\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ...followed by a lot of dependenecies")]),a._v("\n")])])])])]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),t("p",[a._v("If the "),t("code",[a._v("Palomad: command not found")]),a._v(" error message is returned, confirm that\nthe Go binary path is correctly configured by running the following command:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("go "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("env")]),a._v(" GOPATH"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("/bin\n")])])])]),a._v(" "),t("h2",{attrs:{id:"configure-general-settings"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#configure-general-settings"}},[a._v("#")]),a._v(" Configure general settings")]),a._v(" "),t("p",[a._v("The following information describes the most important node configuration\nsettings found in the "),t("code",[a._v("~/.Paloma/config/")]),a._v(" directory. It is\nrecommended that you update these settings with your own information.")]),a._v(" "),t("p",[a._v(":::detail Structure of .Paloma/config")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("~/.Paloma/config\n│-- addrbook.json                       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# a registry of peers to connect to")]),a._v("\n│-- app.toml                            "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Palomad configuration file")]),a._v("\n│-- client.toml                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# configurations for the cli wallet (ex Palomacli)")]),a._v("\n│-- config.toml                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Tendermint configuration  file")]),a._v("\n│-- genesis.json                        "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# gensesis transactions")]),a._v("\n│-- node_key.json                       "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# private key used for node authentication in the p2p protocol (its corresponding public key is the nodeid)")]),a._v("\n└-- priv_validator_key.json             "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# key used by the validator on the node to sign blocks")]),a._v("\n")])])]),t("p",[a._v(":::")]),a._v(" "),t("h3",{attrs:{id:"initialize-and-configure-moniker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initialize-and-configure-moniker"}},[a._v("#")]),a._v(" Initialize and configure moniker")]),a._v(" "),t("p",[a._v("Initialize the node with a human-readable name:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("Palomad init "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("your_custom_moniker"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ex., Palomad init validator-joes-node")]),a._v("\n")])])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[a._v("Moniker characters")]),a._v(" "),t("p",[a._v("Monikers can only contain ASCII characters; using Unicode characters\nwill render your node unreachable by other peers in the network.")])]),a._v(" "),t("p",[a._v("You can update your node's moniker by editing the "),t("code",[a._v("moniker")]),a._v(" field\nin "),t("code",[a._v("~/.Paloma/config/config.toml")])]),a._v(" "),t("h3",{attrs:{id:"update-minimum-gas-prices"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#update-minimum-gas-prices"}},[a._v("#")]),a._v(" Update minimum gas prices")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Open "),t("code",[a._v("~/.Paloma/config/app.toml")]),a._v(".")])]),a._v(" "),t("li",[t("p",[a._v("Modify "),t("code",[a._v("minimum-gas-prices")]),a._v(" and set the minimum price of gas a validator\nwill accept to validate a transaction and to prevent spam.")])])]),a._v(" "),t("ul",[t("li",[a._v("You can "),t("a",{attrs:{href:"https://api.Paloma.dev/gas-prices",target:"_blank",rel:"noopener noreferrer"}},[a._v("query API"),t("OutboundLink")],1),a._v(" to view the current\ngas prices.")])]),a._v(" "),t("p",[t("strong",[a._v("Example")]),a._v(":")]),a._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# The minimum gas prices a validator is willing to accept for processing a")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# transaction. A transaction's fees must meet the minimum of any denomination")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# specified in this config (e.g. 0.25token1;0.0001token2).")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key property"}},[a._v("minimum-gas-prices")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"0.01133ugrain"')]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("## Start the light client daemon (LCD)")]),a._v("\n\nFor information about the available Paloma REST API endpoints"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" see the \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("Swagger documentation"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("(https://lcd"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Paloma"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("dev/swagger/)"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" To enable the REST \nAPI and Swagger"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" and to start the LCD"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" complete the following steps:\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" Open `~/"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("Paloma/config/app"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("toml`"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" Locate the `API Configuration` section (`"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("api"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("`)"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v(" Change `enable "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v("` to `enable "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("`"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("\n\n   ```toml\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Enable defines if the API server should be enabled.")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token key property"}},[a._v("enable")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[t("p",[a._v("Optional: Swagger defines if swagger documentation should automatically be\nregistered. To enable Swagger, change "),t("code",[a._v("swagger = false to")]),a._v("swagger = true`.")]),a._v(" "),t("div",{staticClass:"language-toml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-toml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key property"}},[a._v("swagger")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),a._v("\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Restart the service via "),t("code",[a._v("systemctl restart Palomad")]),a._v(". Once restarted, the LCD\nwill be available (by default on port "),t("code",[a._v("127.0.0.1:1317")]),a._v(")")])])]),a._v(" "),t("h3",{attrs:{id:"set-up-external-address-in-config-toml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set-up-external-address-in-config-toml"}},[a._v("#")]),a._v(" Set up "),t("code",[a._v("external_address")]),a._v(" in "),t("code",[a._v("config.toml")])]),a._v(" "),t("p",[a._v("In order to be added to the address book in seed nodes, you need to configure\n"),t("code",[a._v("external_address")]),a._v(" in "),t("code",[a._v("config.toml")]),a._v(".  This addition will prevent continuous reconnections.\nThe default P2P_PORT is 26656.")]),a._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" -i -e "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'s/external_address = \\"\\"/external_address = \\"\'')]),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" httpbin.org/ip "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" jq -r .origin"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("':26656\\\"/g'")]),a._v(" ~/.Paloma/config/config.toml\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);